
  var Module = typeof globalThis.EmscriptenForgeModule !== 'undefined' ? globalThis.EmscriptenForgeModule : {};

  if (!Module.expectedDataFileDownloads) {
    Module.expectedDataFileDownloads = 0;
  }

  Module.expectedDataFileDownloads++;
  (function() {
    // When running as a pthread, FS operations are proxied to the main thread, so we don't need to
    // fetch the .data bundle on the worker
    if (Module['ENVIRONMENT_IS_PTHREAD']) return;
    var loadPackage = function(metadata) {

      var PACKAGE_PATH = '';
      if (typeof window === 'object') {
        PACKAGE_PATH = window['encodeURIComponent'](window.location.pathname.toString().substring(0, window.location.pathname.toString().lastIndexOf('/')) + '/');
      } else if (typeof process === 'undefined' && typeof location !== 'undefined') {
        // web worker
        PACKAGE_PATH = encodeURIComponent(location.pathname.toString().substring(0, location.pathname.toString().lastIndexOf('/')) + '/');
      }
      var PACKAGE_NAME = 'mpc-1.2.1-h7191ef3_0.tar.bz2.0.data';
      var REMOTE_PACKAGE_BASE = 'mpc-1.2.1-h7191ef3_0.tar.bz2.0.data';
      if (typeof Module['locateFilePackage'] === 'function' && !Module['locateFile']) {
        Module['locateFile'] = Module['locateFilePackage'];
        err('warning: you defined Module.locateFilePackage, that has been renamed to Module.locateFile (using your locateFilePackage for now)');
      }
      var REMOTE_PACKAGE_NAME = Module['locateFile'] ? Module['locateFile'](REMOTE_PACKAGE_BASE, '') : REMOTE_PACKAGE_BASE;

      var REMOTE_PACKAGE_SIZE = metadata['remote_package_size'];
      var PACKAGE_UUID = metadata['package_uuid'];

      function fetchRemotePackage(packageName, packageSize, callback, errback) {
        
        var xhr = new XMLHttpRequest();
        xhr.open('GET', packageName, true);
        xhr.responseType = 'arraybuffer';
        xhr.onprogress = function(event) {
          var url = packageName;
          var size = packageSize;
          if (event.total) size = event.total;
          if (event.loaded) {
            if (!xhr.addedTotal) {
              xhr.addedTotal = true;
              if (!Module.dataFileDownloads) Module.dataFileDownloads = {};
              Module.dataFileDownloads[url] = {
                loaded: event.loaded,
                total: size
              };
            } else {
              Module.dataFileDownloads[url].loaded = event.loaded;
            }
            var total = 0;
            var loaded = 0;
            var num = 0;
            for (var download in Module.dataFileDownloads) {
            var data = Module.dataFileDownloads[download];
              total += data.total;
              loaded += data.loaded;
              num++;
            }
            total = Math.ceil(total * Module.expectedDataFileDownloads/num);
            if (Module['empackSetStatus']) Module['empackSetStatus']('Downloading',PACKAGE_NAME,loaded,total);
            if (Module['setStatus']) Module['setStatus']('Downloading data... (' + loaded + '/' + total + ')');
          } else if (!Module.dataFileDownloads) {
            if (Module['setStatus']) Module['setStatus']('Downloading data...');
          }
        };
        xhr.onerror = function(event) {
          throw new Error("NetworkError for: " + packageName);
        }
        xhr.onload = function(event) {
          if (xhr.status == 200 || xhr.status == 304 || xhr.status == 206 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
            var packageData = xhr.response;
            callback(packageData);
          } else {
            throw new Error(xhr.statusText + " : " + xhr.responseURL);
          }
        };
        xhr.send(null);
      };

      function handleError(error) {
        console.error('package error:', error);
      };

      var fetchedCallback = null;
      var fetched = Module['getPreloadedPackage'] ? Module['getPreloadedPackage'](REMOTE_PACKAGE_NAME, REMOTE_PACKAGE_SIZE) : null;

      if (!fetched) fetchRemotePackage(REMOTE_PACKAGE_NAME, REMOTE_PACKAGE_SIZE, function(data) {
        if (fetchedCallback) {
          fetchedCallback(data);
          fetchedCallback = null;
        } else {
          fetched = data;
        }
      }, handleError);

    function runWithFS() {

      function assert(check, msg) {
        if (!check) throw msg + new Error().stack;
      }
Module['FS_createPath']("/", "home", true, true);
Module['FS_createPath']("/home", "runner", true, true);
Module['FS_createPath']("/home/runner", "env", true, true);
Module['FS_createPath']("/home/runner/env", "lib", true, true);

      function processPackageData(arrayBuffer) {
        assert(arrayBuffer, 'Loading data file failed.');
        assert(arrayBuffer instanceof ArrayBuffer, 'bad input to processPackageData');
        var byteArray = new Uint8Array(arrayBuffer);
        var curr;
        var compressedData = {"data":null,"cachedOffset":1790027,"cachedIndexes":[-1,-1],"cachedChunks":[null,null],"offsets":[0,1629,3378,5198,7006,8836,10721,12563,13684,15480,17275,19105,20853,22723,24528,26349,28195,30076,31813,33612,35471,37248,39060,40943,42739,44544,46260,47627,49409,51188,53018,54757,56573,58363,60184,62039,63826,65656,67503,69291,71112,72947,74767,76601,78409,80068,81781,83524,85278,87035,88802,90625,92479,94363,96238,97589,99368,101077,102883,104707,106525,108213,110000,111782,113632,115496,117264,118960,120761,122555,124335,126094,127917,129707,131489,133336,135192,137031,138839,140654,142480,144146,145950,147768,149469,151241,153080,154911,156748,158161,158956,160006,160877,161648,163394,165140,167001,168797,170645,172402,174251,176109,177910,179659,181432,183300,185110,186926,188675,190455,192253,193999,195687,197530,198965,200742,202544,204360,206194,208039,209854,211724,212908,214263,216032,217858,219685,221534,223375,225205,227020,228846,230673,232450,234286,236128,237985,239843,241657,243487,245307,247161,248896,250704,252566,254445,256277,258060,259864,261638,263421,265274,267070,268848,270627,272423,274234,276023,277873,279669,281549,283390,285166,287068,288923,290813,292676,294521,296387,298240,300116,301960,303699,305476,307282,309066,310918,312716,314545,316399,318279,320120,321976,323810,325653,327456,329361,331198,333030,334773,336618,338457,340309,342198,344067,345872,347744,349625,351474,353310,355111,356950,358696,360525,362271,364043,365852,367741,369630,371484,373282,375136,376963,378808,380589,382403,384246,386052,387843,389596,391418,393191,395040,396906,398748,400501,402064,403893,405784,407645,409414,411315,413151,415014,416859,418721,420495,422259,424089,425893,427739,429575,431432,433279,435172,437078,438898,440801,442686,444531,446395,448268,450121,451967,453818,455643,457413,459136,460933,462776,464592,466415,467970,469786,471614,473440,475202,477027,478853,480653,482451,484262,486108,487909,489709,491542,493311,495160,496963,498771,499966,500909,502703,504553,506362,508167,510059,511895,513729,515522,517366,519188,521032,522885,524714,526572,528429,530245,532113,533949,535794,537648,539467,541327,543150,544928,546794,548661,550532,552386,554270,556138,557979,559879,561714,563565,565467,567272,569134,571022,572877,574768,576659,578542,580455,582264,584157,585964,587770,589615,591467,593334,595197,597007,598881,600772,602610,604454,606260,608158,609999,611791,613631,615456,617233,619004,620818,622659,624497,626354,628186,630059,631866,633733,635346,636807,638661,640481,642265,644119,645944,647796,649617,651391,653233,655063,656905,658692,660530,662350,664248,666065,667915,669825,671644,673535,675426,677321,679196,681091,682920,684381,685819,687588,689301,691062,692773,694596,696400,698209,699969,701752,703587,705448,707290,709096,710952,712789,714629,716448,718289,720088,721882,723719,725523,727373,729177,731008,732838,734631,736464,738250,740089,741912,743809,745629,747472,749195,751007,752916,754770,756592,758389,760212,762057,763863,765683,767564,769366,771232,773066,774888,776735,778578,780386,782197,784005,785798,787647,789412,791211,793004,794840,796682,798177,799272,801128,803013,804912,806715,808521,810340,812167,813994,815826,817686,819513,821387,823189,825003,826821,828656,830457,832235,833922,835752,837566,839433,841212,843094,844931,846788,848581,850413,852251,854060,855887,857687,859430,861221,863092,864893,866750,868638,870514,872375,874229,876107,877889,879710,881519,883355,885165,887013,888856,890696,892514,894374,896169,897979,899866,901713,903375,905249,907141,909020,910860,912624,914416,916140,917750,919558,921330,923133,924947,926728,928409,930209,931862,933678,935469,937048,938781,940555,942384,944152,945978,947767,949596,951399,953153,954953,956732,958490,960339,962136,963933,965776,967474,969266,971087,972732,974530,976333,978150,979939,981760,983596,985407,987247,989014,990793,992619,994389,996240,998025,999742,1001560,1003268,1004951,1006675,1007715,1009539,1011277,1013095,1014857,1016630,1018419,1020203,1022025,1023800,1025560,1027389,1029208,1030944,1032712,1034514,1036311,1038042,1039827,1041613,1043406,1045232,1047102,1048892,1050713,1052477,1054335,1056234,1058065,1059958,1061824,1063626,1065484,1067268,1069070,1070929,1072795,1074636,1076465,1078263,1080074,1081841,1083672,1085483,1087316,1089072,1090830,1092662,1094460,1096247,1098121,1099904,1101638,1103400,1105129,1106860,1108659,1110460,1112253,1114000,1115761,1117573,1119403,1121269,1123069,1124801,1126657,1128443,1130269,1132059,1133877,1135609,1137414,1139149,1140973,1142836,1144602,1146403,1148169,1149998,1151761,1153529,1155318,1157135,1158980,1160838,1162619,1164400,1166208,1168020,1169852,1171619,1173400,1175216,1177053,1178844,1180666,1182363,1184060,1185801,1187676,1189549,1191380,1193133,1194961,1196735,1198577,1200344,1202166,1203946,1205722,1207531,1209422,1211248,1213117,1214933,1216665,1218514,1220311,1222116,1223929,1225716,1227515,1229323,1230983,1232799,1234591,1236414,1238246,1240059,1241898,1243777,1245620,1247499,1249234,1251004,1252882,1254767,1256642,1258494,1260304,1262154,1263978,1265842,1267712,1269546,1271408,1273272,1275142,1277018,1278898,1280767,1282641,1284468,1286358,1288171,1290028,1291874,1293734,1295602,1297490,1299364,1301232,1303099,1304958,1306823,1308683,1310544,1312379,1314281,1316133,1317978,1319828,1321709,1323567,1325424,1327272,1329112,1330938,1332779,1334597,1336439,1338246,1340083,1341894,1343759,1345559,1347302,1349111,1350906,1352682,1354450,1356263,1358081,1359873,1361698,1363472,1365324,1367117,1368915,1370735,1372479,1374284,1376102,1377911,1379694,1381502,1383375,1385170,1386987,1388793,1390584,1392357,1394122,1395931,1397750,1399558,1401413,1403251,1405073,1406913,1408728,1410618,1412403,1414278,1416147,1417910,1419772,1421450,1423217,1425015,1426811,1428637,1430377,1432167,1433990,1435744,1437536,1439402,1441187,1443007,1444764,1446576,1448364,1450193,1452000,1453817,1455641,1457462,1459248,1461053,1462836,1464637,1466449,1468259,1470112,1471946,1473736,1475556,1477379,1479216,1481043,1482865,1484683,1486480,1488350,1490174,1491958,1493785,1495651,1497420,1499240,1500906,1502753,1504552,1506415,1508196,1509994,1511827,1513710,1515474,1517251,1519042,1520841,1522621,1524431,1526232,1528022,1529864,1531653,1533509,1535379,1537234,1539055,1540837,1542669,1544462,1546310,1548111,1549915,1551687,1553449,1555218,1556987,1558749,1560510,1562353,1564232,1566082,1567928,1569722,1571491,1573241,1574689,1576042,1577479,1579151,1580768,1582168,1583742,1585171,1586462,1587568,1588473,1589622,1591288,1593263,1595037,1597072,1599108,1600138,1600851,1601083,1601108,1601133,1601158,1601183,1601222,1602294,1603876,1605242,1606843,1608316,1609971,1611310,1612478,1613814,1615365,1617040,1618686,1620216,1621805,1623266,1624748,1626296,1627942,1629509,1631066,1632699,1633518,1634370,1635460,1636660,1637751,1638924,1640284,1640890,1641759,1642516,1643280,1644132,1645416,1646256,1647163,1648047,1648936,1649890,1650778,1651476,1652273,1653500,1654393,1656199,1658098,1659827,1660796,1662160,1663603,1664991,1665486,1665839,1667285,1668757,1670130,1671090,1671993,1673393,1674580,1675865,1676931,1678265,1679426,1680377,1681482,1682844,1684160,1684583,1685207,1686684,1688711,1690721,1692726,1694652,1696645,1698654,1700562,1702489,1704401,1706338,1708279,1710206,1712123,1714054,1715993,1717911,1719813,1721754,1723676,1725660,1727598,1729542,1731500,1733452,1735334,1737146,1738938,1740804,1742718,1744629,1746511,1748404,1750146,1752059,1753904,1755902,1757786,1759632,1761456,1763280,1765116,1766979,1768836,1770691,1772539,1774308,1776285,1778027,1779286,1780573,1781883,1783119,1784199,1785407,1786668,1787672,1788303,1789219],"sizes":[1629,1749,1820,1808,1830,1885,1842,1121,1796,1795,1830,1748,1870,1805,1821,1846,1881,1737,1799,1859,1777,1812,1883,1796,1805,1716,1367,1782,1779,1830,1739,1816,1790,1821,1855,1787,1830,1847,1788,1821,1835,1820,1834,1808,1659,1713,1743,1754,1757,1767,1823,1854,1884,1875,1351,1779,1709,1806,1824,1818,1688,1787,1782,1850,1864,1768,1696,1801,1794,1780,1759,1823,1790,1782,1847,1856,1839,1808,1815,1826,1666,1804,1818,1701,1772,1839,1831,1837,1413,795,1050,871,771,1746,1746,1861,1796,1848,1757,1849,1858,1801,1749,1773,1868,1810,1816,1749,1780,1798,1746,1688,1843,1435,1777,1802,1816,1834,1845,1815,1870,1184,1355,1769,1826,1827,1849,1841,1830,1815,1826,1827,1777,1836,1842,1857,1858,1814,1830,1820,1854,1735,1808,1862,1879,1832,1783,1804,1774,1783,1853,1796,1778,1779,1796,1811,1789,1850,1796,1880,1841,1776,1902,1855,1890,1863,1845,1866,1853,1876,1844,1739,1777,1806,1784,1852,1798,1829,1854,1880,1841,1856,1834,1843,1803,1905,1837,1832,1743,1845,1839,1852,1889,1869,1805,1872,1881,1849,1836,1801,1839,1746,1829,1746,1772,1809,1889,1889,1854,1798,1854,1827,1845,1781,1814,1843,1806,1791,1753,1822,1773,1849,1866,1842,1753,1563,1829,1891,1861,1769,1901,1836,1863,1845,1862,1774,1764,1830,1804,1846,1836,1857,1847,1893,1906,1820,1903,1885,1845,1864,1873,1853,1846,1851,1825,1770,1723,1797,1843,1816,1823,1555,1816,1828,1826,1762,1825,1826,1800,1798,1811,1846,1801,1800,1833,1769,1849,1803,1808,1195,943,1794,1850,1809,1805,1892,1836,1834,1793,1844,1822,1844,1853,1829,1858,1857,1816,1868,1836,1845,1854,1819,1860,1823,1778,1866,1867,1871,1854,1884,1868,1841,1900,1835,1851,1902,1805,1862,1888,1855,1891,1891,1883,1913,1809,1893,1807,1806,1845,1852,1867,1863,1810,1874,1891,1838,1844,1806,1898,1841,1792,1840,1825,1777,1771,1814,1841,1838,1857,1832,1873,1807,1867,1613,1461,1854,1820,1784,1854,1825,1852,1821,1774,1842,1830,1842,1787,1838,1820,1898,1817,1850,1910,1819,1891,1891,1895,1875,1895,1829,1461,1438,1769,1713,1761,1711,1823,1804,1809,1760,1783,1835,1861,1842,1806,1856,1837,1840,1819,1841,1799,1794,1837,1804,1850,1804,1831,1830,1793,1833,1786,1839,1823,1897,1820,1843,1723,1812,1909,1854,1822,1797,1823,1845,1806,1820,1881,1802,1866,1834,1822,1847,1843,1808,1811,1808,1793,1849,1765,1799,1793,1836,1842,1495,1095,1856,1885,1899,1803,1806,1819,1827,1827,1832,1860,1827,1874,1802,1814,1818,1835,1801,1778,1687,1830,1814,1867,1779,1882,1837,1857,1793,1832,1838,1809,1827,1800,1743,1791,1871,1801,1857,1888,1876,1861,1854,1878,1782,1821,1809,1836,1810,1848,1843,1840,1818,1860,1795,1810,1887,1847,1662,1874,1892,1879,1840,1764,1792,1724,1610,1808,1772,1803,1814,1781,1681,1800,1653,1816,1791,1579,1733,1774,1829,1768,1826,1789,1829,1803,1754,1800,1779,1758,1849,1797,1797,1843,1698,1792,1821,1645,1798,1803,1817,1789,1821,1836,1811,1840,1767,1779,1826,1770,1851,1785,1717,1818,1708,1683,1724,1040,1824,1738,1818,1762,1773,1789,1784,1822,1775,1760,1829,1819,1736,1768,1802,1797,1731,1785,1786,1793,1826,1870,1790,1821,1764,1858,1899,1831,1893,1866,1802,1858,1784,1802,1859,1866,1841,1829,1798,1811,1767,1831,1811,1833,1756,1758,1832,1798,1787,1874,1783,1734,1762,1729,1731,1799,1801,1793,1747,1761,1812,1830,1866,1800,1732,1856,1786,1826,1790,1818,1732,1805,1735,1824,1863,1766,1801,1766,1829,1763,1768,1789,1817,1845,1858,1781,1781,1808,1812,1832,1767,1781,1816,1837,1791,1822,1697,1697,1741,1875,1873,1831,1753,1828,1774,1842,1767,1822,1780,1776,1809,1891,1826,1869,1816,1732,1849,1797,1805,1813,1787,1799,1808,1660,1816,1792,1823,1832,1813,1839,1879,1843,1879,1735,1770,1878,1885,1875,1852,1810,1850,1824,1864,1870,1834,1862,1864,1870,1876,1880,1869,1874,1827,1890,1813,1857,1846,1860,1868,1888,1874,1868,1867,1859,1865,1860,1861,1835,1902,1852,1845,1850,1881,1858,1857,1848,1840,1826,1841,1818,1842,1807,1837,1811,1865,1800,1743,1809,1795,1776,1768,1813,1818,1792,1825,1774,1852,1793,1798,1820,1744,1805,1818,1809,1783,1808,1873,1795,1817,1806,1791,1773,1765,1809,1819,1808,1855,1838,1822,1840,1815,1890,1785,1875,1869,1763,1862,1678,1767,1798,1796,1826,1740,1790,1823,1754,1792,1866,1785,1820,1757,1812,1788,1829,1807,1817,1824,1821,1786,1805,1783,1801,1812,1810,1853,1834,1790,1820,1823,1837,1827,1822,1818,1797,1870,1824,1784,1827,1866,1769,1820,1666,1847,1799,1863,1781,1798,1833,1883,1764,1777,1791,1799,1780,1810,1801,1790,1842,1789,1856,1870,1855,1821,1782,1832,1793,1848,1801,1804,1772,1762,1769,1769,1762,1761,1843,1879,1850,1846,1794,1769,1750,1448,1353,1437,1672,1617,1400,1574,1429,1291,1106,905,1149,1666,1975,1774,2035,2036,1030,713,232,25,25,25,25,39,1072,1582,1366,1601,1473,1655,1339,1168,1336,1551,1675,1646,1530,1589,1461,1482,1548,1646,1567,1557,1633,819,852,1090,1200,1091,1173,1360,606,869,757,764,852,1284,840,907,884,889,954,888,698,797,1227,893,1806,1899,1729,969,1364,1443,1388,495,353,1446,1472,1373,960,903,1400,1187,1285,1066,1334,1161,951,1105,1362,1316,423,624,1477,2027,2010,2005,1926,1993,2009,1908,1927,1912,1937,1941,1927,1917,1931,1939,1918,1902,1941,1922,1984,1938,1944,1958,1952,1882,1812,1792,1866,1914,1911,1882,1893,1742,1913,1845,1998,1884,1846,1824,1824,1836,1863,1857,1855,1848,1769,1977,1742,1259,1287,1310,1236,1080,1208,1261,1004,631,916,808],"successes":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}
;
            compressedData['data'] = byteArray;
            assert(typeof Module['LZ4'] === 'object', 'LZ4 not present - was your app build with  -s LZ4=1  ?');
            Module['LZ4'].loadPackage({ 'metadata': metadata, 'compressedData': compressedData }, true);
            Module['removeRunDependency']('datafile_mpc-1.2.1-h7191ef3_0.tar.bz2.0.data');
      };
      Module['addRunDependency']('datafile_mpc-1.2.1-h7191ef3_0.tar.bz2.0.data');

      if (!Module.preloadResults) Module.preloadResults = {};

      Module.preloadResults[PACKAGE_NAME] = {fromCache: false};
      if (fetched) {
        processPackageData(fetched);
        fetched = null;
      } else {
        fetchedCallback = processPackageData;
      }

    }
    if (Module['calledRun']) {
      runWithFS();
    } else {
      if (!Module['preRun']) Module['preRun'] = [];
      Module["preRun"].push(runWithFS); // FS is not initialized yet, wait for it
    }

    }
loadPackage({"files": [{"filename": "/home/runner/env/lib/libmpc.so", "start": 0, "end": 2104503}]});
  })();
