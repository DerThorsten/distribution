
  var Module = typeof globalThis.EmscriptenForgeModule !== 'undefined' ? globalThis.EmscriptenForgeModule : {};

  if (!Module.expectedDataFileDownloads) {
    Module.expectedDataFileDownloads = 0;
  }

  Module.expectedDataFileDownloads++;
  (function() {
    // When running as a pthread, FS operations are proxied to the main thread, so we don't need to
    // fetch the .data bundle on the worker
    if (Module['ENVIRONMENT_IS_PTHREAD']) return;
    var loadPackage = function(metadata) {

      var PACKAGE_PATH = '';
      if (typeof window === 'object') {
        PACKAGE_PATH = window['encodeURIComponent'](window.location.pathname.toString().substring(0, window.location.pathname.toString().lastIndexOf('/')) + '/');
      } else if (typeof process === 'undefined' && typeof location !== 'undefined') {
        // web worker
        PACKAGE_PATH = encodeURIComponent(location.pathname.toString().substring(0, location.pathname.toString().lastIndexOf('/')) + '/');
      }
      var PACKAGE_NAME = 'unicodedata2-14.0.0-h672cd09_0.tar.bz2.0.data';
      var REMOTE_PACKAGE_BASE = 'unicodedata2-14.0.0-h672cd09_0.tar.bz2.0.data';
      if (typeof Module['locateFilePackage'] === 'function' && !Module['locateFile']) {
        Module['locateFile'] = Module['locateFilePackage'];
        err('warning: you defined Module.locateFilePackage, that has been renamed to Module.locateFile (using your locateFilePackage for now)');
      }
      var REMOTE_PACKAGE_NAME = Module['locateFile'] ? Module['locateFile'](REMOTE_PACKAGE_BASE, '') : REMOTE_PACKAGE_BASE;

      var REMOTE_PACKAGE_SIZE = metadata['remote_package_size'];
      var PACKAGE_UUID = metadata['package_uuid'];

      function fetchRemotePackage(packageName, packageSize, callback, errback) {
        
        var xhr = new XMLHttpRequest();
        xhr.open('GET', packageName, true);
        xhr.responseType = 'arraybuffer';
        xhr.onprogress = function(event) {
          var url = packageName;
          var size = packageSize;
          if (event.total) size = event.total;
          if (event.loaded) {
            if (!xhr.addedTotal) {
              xhr.addedTotal = true;
              if (!Module.dataFileDownloads) Module.dataFileDownloads = {};
              Module.dataFileDownloads[url] = {
                loaded: event.loaded,
                total: size
              };
            } else {
              Module.dataFileDownloads[url].loaded = event.loaded;
            }
            var total = 0;
            var loaded = 0;
            var num = 0;
            for (var download in Module.dataFileDownloads) {
            var data = Module.dataFileDownloads[download];
              total += data.total;
              loaded += data.loaded;
              num++;
            }
            total = Math.ceil(total * Module.expectedDataFileDownloads/num);
            if (Module['empackSetStatus']) Module['empackSetStatus']('Downloading',PACKAGE_NAME,loaded,total);
            if (Module['setStatus']) Module['setStatus']('Downloading data... (' + loaded + '/' + total + ')');
          } else if (!Module.dataFileDownloads) {
            if (Module['setStatus']) Module['setStatus']('Downloading data...');
          }
        };
        xhr.onerror = function(event) {
          throw new Error("NetworkError for: " + packageName);
        }
        xhr.onload = function(event) {
          if (xhr.status == 200 || xhr.status == 304 || xhr.status == 206 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
            var packageData = xhr.response;
            callback(packageData);
          } else {
            throw new Error(xhr.statusText + " : " + xhr.responseURL);
          }
        };
        xhr.send(null);
      };

      function handleError(error) {
        console.error('package error:', error);
      };

      var fetchedCallback = null;
      var fetched = Module['getPreloadedPackage'] ? Module['getPreloadedPackage'](REMOTE_PACKAGE_NAME, REMOTE_PACKAGE_SIZE) : null;

      if (!fetched) fetchRemotePackage(REMOTE_PACKAGE_NAME, REMOTE_PACKAGE_SIZE, function(data) {
        if (fetchedCallback) {
          fetchedCallback(data);
          fetchedCallback = null;
        } else {
          fetched = data;
        }
      }, handleError);

    function runWithFS() {

      function assert(check, msg) {
        if (!check) throw msg + new Error().stack;
      }
Module['FS_createPath']("/", "home", true, true);
Module['FS_createPath']("/home", "runner", true, true);
Module['FS_createPath']("/home/runner", "env", true, true);
Module['FS_createPath']("/home/runner/env", "lib", true, true);
Module['FS_createPath']("/home/runner/env/lib", "python3.10", true, true);
Module['FS_createPath']("/home/runner/env/lib/python3.10", "site-packages", true, true);

      function processPackageData(arrayBuffer) {
        assert(arrayBuffer, 'Loading data file failed.');
        assert(arrayBuffer instanceof ArrayBuffer, 'bad input to processPackageData');
        var byteArray = new Uint8Array(arrayBuffer);
        var curr;
        var compressedData = {"data":null,"cachedOffset":743206,"cachedIndexes":[-1,-1],"cachedChunks":[null,null],"offsets":[0,1325,2396,3118,3312,3467,3654,3761,3910,4581,4854,5078,5304,5462,5602,5757,6077,6316,7423,7973,8912,10526,11417,13023,14509,15590,16939,17746,17963,17989,18015,18041,18067,18093,18140,18486,19044,19522,20345,20785,21285,21728,22299,22761,23013,23293,23417,23556,23635,23958,24634,24887,25223,25460,25795,26138,26518,27012,27414,27682,27887,28060,28261,28560,28811,29081,29360,29648,29746,29850,30368,31747,33419,34832,36578,37445,38150,38290,38316,38342,38368,38394,38420,38467,38929,39672,40342,41196,41753,41959,42468,42926,43947,44365,44870,45209,45556,45760,46342,46516,46872,47183,47475,47849,48169,48697,49097,49408,49618,49782,49941,50276,50445,50671,51025,51267,51478,51668,52076,53502,54544,55525,56561,57504,58445,59529,60646,61605,62621,63503,64689,65898,67035,68144,69254,70432,71482,72530,73678,74829,75696,76002,76237,76642,77189,78289,79393,80522,80657,80682,80707,80732,81481,81903,82077,82518,84060,84581,85571,86656,88508,90073,90352,92399,93643,94589,94841,94867,94893,94919,94945,94971,95032,95483,96937,98458,100208,101802,103607,105295,107167,109064,110850,112669,114514,116546,118328,120157,121900,123430,125219,126779,128240,129437,131016,132838,134420,136087,137822,139618,141367,143021,144725,146461,148414,150290,152171,153957,156005,158053,160035,161714,163471,165149,166922,168898,170196,171436,172765,174442,176018,177809,179520,181167,182947,184569,186073,187946,189830,191674,193387,194990,196642,198267,199843,201495,203057,204912,206960,209014,210993,212686,214436,216306,218339,219983,221993,223779,225355,226927,228578,230152,231720,233232,234691,236350,238009,239685,241183,242782,244812,246542,248117,249826,251244,253231,255193,256853,258816,260659,262424,263950,265277,267005,268589,270277,271757,273409,274991,275906,276547,278226,279779,281536,283204,284880,286594,288256,289964,291641,293519,295104,296825,298571,299392,299979,300550,301181,301758,302295,302848,303385,304402,306008,307759,309477,311212,312465,313558,315252,316651,317266,317885,318503,319118,319743,321340,321876,322415,322952,323517,324070,324607,325371,327116,328980,330667,332349,333940,335747,337803,339859,341916,343973,346021,348078,350135,352183,354240,356297,358354,360411,362468,364516,366573,368629,370686,372734,374790,376838,378895,380952,383000,385057,387105,389153,391201,393249,395306,397363,399420,401468,403278,405326,407361,409332,411279,412940,414494,416100,417972,419990,422013,424018,425808,427504,429436,431486,433376,435424,437310,439367,441415,443463,445484,447238,449169,451184,452485,454533,456581,458598,460465,462371,463986,466016,467791,469667,471497,473209,474994,476733,478100,479623,480959,481791,483553,485111,486624,487758,489303,490393,491954,494002,495621,497333,499381,501163,503004,505052,506333,507565,509613,511661,513104,514891,516493,518277,519546,521539,523594,525642,526595,527917,528916,530243,531817,533865,535898,537424,539251,541144,542699,544703,546602,547768,548509,549260,550478,551718,553137,554533,555830,557150,558408,559815,561157,562541,563974,565376,566732,568055,569371,570774,571928,573155,574538,576058,577464,578738,580097,581450,582942,584363,585750,587165,588405,589620,590827,592113,593654,595285,596743,598193,599444,600862,602091,603594,604887,606171,607501,609026,610363,611650,612880,614246,615591,616773,618163,619544,621078,622287,623727,625308,626783,628241,629565,630974,632281,633536,634900,636475,637944,639263,640640,642181,643520,644993,646436,647786,648954,650212,651706,653171,654713,656232,657625,659138,660451,661744,663078,664393,665874,667371,668963,670340,671777,673019,674395,675602,676872,678267,679763,681144,682552,683838,685215,686566,687855,689108,690500,691864,693196,694736,695978,697294,698541,699914,701289,702526,703871,705186,706509,707883,709216,710474,711909,713311,714723,716144,717475,718820,720186,721542,722999,724375,726173,727785,728721,729369,729777,730269,730672,731151,732209,733179,734131,735042,735850,736818,736888,736913,736944,737229,737646,738104,738444,738788,739062,739257,739525,739825,740247,740655,741024,741293,741517,741914,742262,742879],"sizes":[1325,1071,722,194,155,187,107,149,671,273,224,226,158,140,155,320,239,1107,550,939,1614,891,1606,1486,1081,1349,807,217,26,26,26,26,26,47,346,558,478,823,440,500,443,571,462,252,280,124,139,79,323,676,253,336,237,335,343,380,494,402,268,205,173,201,299,251,270,279,288,98,104,518,1379,1672,1413,1746,867,705,140,26,26,26,26,26,47,462,743,670,854,557,206,509,458,1021,418,505,339,347,204,582,174,356,311,292,374,320,528,400,311,210,164,159,335,169,226,354,242,211,190,408,1426,1042,981,1036,943,941,1084,1117,959,1016,882,1186,1209,1137,1109,1110,1178,1050,1048,1148,1151,867,306,235,405,547,1100,1104,1129,135,25,25,25,749,422,174,441,1542,521,990,1085,1852,1565,279,2047,1244,946,252,26,26,26,26,26,61,451,1454,1521,1750,1594,1805,1688,1872,1897,1786,1819,1845,2032,1782,1829,1743,1530,1789,1560,1461,1197,1579,1822,1582,1667,1735,1796,1749,1654,1704,1736,1953,1876,1881,1786,2048,2048,1982,1679,1757,1678,1773,1976,1298,1240,1329,1677,1576,1791,1711,1647,1780,1622,1504,1873,1884,1844,1713,1603,1652,1625,1576,1652,1562,1855,2048,2054,1979,1693,1750,1870,2033,1644,2010,1786,1576,1572,1651,1574,1568,1512,1459,1659,1659,1676,1498,1599,2030,1730,1575,1709,1418,1987,1962,1660,1963,1843,1765,1526,1327,1728,1584,1688,1480,1652,1582,915,641,1679,1553,1757,1668,1676,1714,1662,1708,1677,1878,1585,1721,1746,821,587,571,631,577,537,553,537,1017,1606,1751,1718,1735,1253,1093,1694,1399,615,619,618,615,625,1597,536,539,537,565,553,537,764,1745,1864,1687,1682,1591,1807,2056,2056,2057,2057,2048,2057,2057,2048,2057,2057,2057,2057,2057,2048,2057,2056,2057,2048,2056,2048,2057,2057,2048,2057,2048,2048,2048,2048,2057,2057,2057,2048,1810,2048,2035,1971,1947,1661,1554,1606,1872,2018,2023,2005,1790,1696,1932,2050,1890,2048,1886,2057,2048,2048,2021,1754,1931,2015,1301,2048,2048,2017,1867,1906,1615,2030,1775,1876,1830,1712,1785,1739,1367,1523,1336,832,1762,1558,1513,1134,1545,1090,1561,2048,1619,1712,2048,1782,1841,2048,1281,1232,2048,2048,1443,1787,1602,1784,1269,1993,2055,2048,953,1322,999,1327,1574,2048,2033,1526,1827,1893,1555,2004,1899,1166,741,751,1218,1240,1419,1396,1297,1320,1258,1407,1342,1384,1433,1402,1356,1323,1316,1403,1154,1227,1383,1520,1406,1274,1359,1353,1492,1421,1387,1415,1240,1215,1207,1286,1541,1631,1458,1450,1251,1418,1229,1503,1293,1284,1330,1525,1337,1287,1230,1366,1345,1182,1390,1381,1534,1209,1440,1581,1475,1458,1324,1409,1307,1255,1364,1575,1469,1319,1377,1541,1339,1473,1443,1350,1168,1258,1494,1465,1542,1519,1393,1513,1313,1293,1334,1315,1481,1497,1592,1377,1437,1242,1376,1207,1270,1395,1496,1381,1408,1286,1377,1351,1289,1253,1392,1364,1332,1540,1242,1316,1247,1373,1375,1237,1345,1315,1323,1374,1333,1258,1435,1402,1412,1421,1331,1345,1366,1356,1457,1376,1798,1612,936,648,408,492,403,479,1058,970,952,911,808,968,70,25,31,285,417,458,340,344,274,195,268,300,422,408,369,269,224,397,348,617,327],"successes":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,0,0,0,0,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,0,0,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}
;
            compressedData['data'] = byteArray;
            assert(typeof Module['LZ4'] === 'object', 'LZ4 not present - was your app build with  -s LZ4=1  ?');
            Module['LZ4'].loadPackage({ 'metadata': metadata, 'compressedData': compressedData }, true);
            Module['removeRunDependency']('datafile_unicodedata2-14.0.0-h672cd09_0.tar.bz2.0.data');
      };
      Module['addRunDependency']('datafile_unicodedata2-14.0.0-h672cd09_0.tar.bz2.0.data');

      if (!Module.preloadResults) Module.preloadResults = {};

      Module.preloadResults[PACKAGE_NAME] = {fromCache: false};
      if (fetched) {
        processPackageData(fetched);
        fetched = null;
      } else {
        fetchedCallback = processPackageData;
      }

    }
    if (Module['calledRun']) {
      runWithFS();
    } else {
      if (!Module['preRun']) Module['preRun'] = [];
      Module["preRun"].push(runWithFS); // FS is not initialized yet, wait for it
    }

    }
loadPackage({"files": [{"filename": "/home/runner/env/lib/python3.10/site-packages/unicodedata2.cpython-310.so", "start": 421, "end": 1247608}, {"filename": "/home/runner/env/lib/python3.10/site-packages/unicodedata2.py", "start": 0, "end": 421}]});
  })();
