
  var Module = typeof globalThis.EmscriptenForgeModule !== 'undefined' ? globalThis.EmscriptenForgeModule : {};

  if (!Module.expectedDataFileDownloads) {
    Module.expectedDataFileDownloads = 0;
  }

  Module.expectedDataFileDownloads++;
  (function() {
    // When running as a pthread, FS operations are proxied to the main thread, so we don't need to
    // fetch the .data bundle on the worker
    if (Module['ENVIRONMENT_IS_PTHREAD']) return;
    var loadPackage = function(metadata) {

      var PACKAGE_PATH = '';
      if (typeof window === 'object') {
        PACKAGE_PATH = window['encodeURIComponent'](window.location.pathname.toString().substring(0, window.location.pathname.toString().lastIndexOf('/')) + '/');
      } else if (typeof process === 'undefined' && typeof location !== 'undefined') {
        // web worker
        PACKAGE_PATH = encodeURIComponent(location.pathname.toString().substring(0, location.pathname.toString().lastIndexOf('/')) + '/');
      }
      var PACKAGE_NAME = 'numcodecs-0.9.1-h672cd09_0.tar.bz2.0.data';
      var REMOTE_PACKAGE_BASE = 'numcodecs-0.9.1-h672cd09_0.tar.bz2.0.data';
      if (typeof Module['locateFilePackage'] === 'function' && !Module['locateFile']) {
        Module['locateFile'] = Module['locateFilePackage'];
        err('warning: you defined Module.locateFilePackage, that has been renamed to Module.locateFile (using your locateFilePackage for now)');
      }
      var REMOTE_PACKAGE_NAME = Module['locateFile'] ? Module['locateFile'](REMOTE_PACKAGE_BASE, '') : REMOTE_PACKAGE_BASE;

      var REMOTE_PACKAGE_SIZE = metadata['remote_package_size'];
      var PACKAGE_UUID = metadata['package_uuid'];

      function fetchRemotePackage(packageName, packageSize, callback, errback) {
        
        var xhr = new XMLHttpRequest();
        xhr.open('GET', packageName, true);
        xhr.responseType = 'arraybuffer';
        xhr.onprogress = function(event) {
          var url = packageName;
          var size = packageSize;
          if (event.total) size = event.total;
          if (event.loaded) {
            if (!xhr.addedTotal) {
              xhr.addedTotal = true;
              if (!Module.dataFileDownloads) Module.dataFileDownloads = {};
              Module.dataFileDownloads[url] = {
                loaded: event.loaded,
                total: size
              };
            } else {
              Module.dataFileDownloads[url].loaded = event.loaded;
            }
            var total = 0;
            var loaded = 0;
            var num = 0;
            for (var download in Module.dataFileDownloads) {
            var data = Module.dataFileDownloads[download];
              total += data.total;
              loaded += data.loaded;
              num++;
            }
            total = Math.ceil(total * Module.expectedDataFileDownloads/num);
            if (Module['empackSetStatus']) Module['empackSetStatus']('Downloading',PACKAGE_NAME,loaded,total);
            if (Module['setStatus']) Module['setStatus']('Downloading data... (' + loaded + '/' + total + ')');
          } else if (!Module.dataFileDownloads) {
            if (Module['setStatus']) Module['setStatus']('Downloading data...');
          }
        };
        xhr.onerror = function(event) {
          throw new Error("NetworkError for: " + packageName);
        }
        xhr.onload = function(event) {
          if (xhr.status == 200 || xhr.status == 304 || xhr.status == 206 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
            var packageData = xhr.response;
            callback(packageData);
          } else {
            throw new Error(xhr.statusText + " : " + xhr.responseURL);
          }
        };
        xhr.send(null);
      };

      function handleError(error) {
        console.error('package error:', error);
      };

      var fetchedCallback = null;
      var fetched = Module['getPreloadedPackage'] ? Module['getPreloadedPackage'](REMOTE_PACKAGE_NAME, REMOTE_PACKAGE_SIZE) : null;

      if (!fetched) fetchRemotePackage(REMOTE_PACKAGE_NAME, REMOTE_PACKAGE_SIZE, function(data) {
        if (fetchedCallback) {
          fetchedCallback(data);
          fetchedCallback = null;
        } else {
          fetched = data;
        }
      }, handleError);

    function runWithFS() {

      function assert(check, msg) {
        if (!check) throw msg + new Error().stack;
      }
Module['FS_createPath']("/", "home", true, true);
Module['FS_createPath']("/home", "runner", true, true);
Module['FS_createPath']("/home/runner", "env", true, true);
Module['FS_createPath']("/home/runner/env", "lib", true, true);
Module['FS_createPath']("/home/runner/env/lib", "python3.10", true, true);
Module['FS_createPath']("/home/runner/env/lib/python3.10", "site-packages", true, true);
Module['FS_createPath']("/home/runner/env/lib/python3.10/site-packages", "numcodecs", true, true);
Module['FS_createPath']("/home/runner/env/lib/python3.10/site-packages", "numcodecs-0.9.1.dist-info", true, true);

      function processPackageData(arrayBuffer) {
        assert(arrayBuffer, 'Loading data file failed.');
        assert(arrayBuffer instanceof ArrayBuffer, 'bad input to processPackageData');
        var byteArray = new Uint8Array(arrayBuffer);
        var curr;
        var compressedData = {"data":null,"cachedOffset":1232190,"cachedIndexes":[-1,-1],"cachedChunks":[null,null],"offsets":[0,1125,2387,3725,4902,6029,7524,9052,10534,12135,13619,15176,16563,18178,19797,21442,23021,24518,26038,27590,29198,30729,32280,33813,35446,37105,38638,40210,41865,43496,45036,46281,47892,49559,51064,52564,54231,55768,57223,58826,60546,62112,63677,65288,66797,68524,70006,71513,73197,74766,76196,77605,78720,80015,81365,82957,84142,85398,86896,88349,89810,91161,92818,94290,95673,97057,98511,99777,100942,101957,103151,104251,105602,106850,108188,109244,110352,111773,113408,114944,116573,118074,119685,121099,121884,123020,124227,125690,127178,128628,130115,131592,133128,134661,136173,137645,139273,140672,142139,143605,145205,146562,148002,149293,150998,152544,153802,155376,156942,158427,159857,161117,162493,163900,165235,166100,167488,168800,169856,170451,171602,172926,174300,175409,176415,177422,178535,179842,180749,181664,182529,183779,184817,185734,186706,188240,189806,191258,192724,194126,195634,197041,198387,199534,201026,202470,203989,205566,207078,208561,210151,211606,213138,214533,216001,217454,219086,220352,221905,223466,225119,226654,228155,229555,230853,232270,233655,235168,236748,238308,239836,241249,242749,244112,245640,247034,248424,249984,251277,252643,254201,255633,257074,258527,259731,260954,261938,263300,264214,265551,266810,267841,268738,269265,270060,271153,272167,273315,274590,275940,277166,278557,279688,280944,282175,283264,284454,285786,287083,288445,289804,291203,292810,294390,295954,297447,298757,299876,300950,302215,303520,304566,305921,307175,308313,309368,310432,311738,313008,314043,315514,317051,318424,319778,321253,322059,323434,324913,326435,327914,329099,330460,331997,333503,335022,336328,337627,339164,340668,342387,343891,345493,347165,348810,350422,352025,353615,354998,356571,357704,359436,361064,362658,364003,365596,367120,368496,370209,371374,372826,374015,375479,376988,378141,379770,381284,382849,384406,385867,387249,388646,390244,391152,392539,393668,395170,396729,398268,399818,401300,402552,403692,405066,406308,407470,408990,410336,411787,413235,414764,416098,417308,418798,419913,420983,422183,423563,424902,426101,427581,429028,430580,432136,433677,435192,436750,438132,439812,441243,442806,443909,445492,446869,448317,449918,451039,452502,453963,455242,456652,458044,459569,461112,461960,462995,464365,465993,467680,469399,470256,471880,472845,474165,475844,477154,478251,479920,481404,482301,483915,484978,486215,487868,489244,490306,491877,493385,494295,495832,496823,498110,499818,501134,502212,503889,505184,506043,507640,508637,509924,511584,512968,514047,515676,517131,518165,519718,520996,522323,523849,525576,527068,528410,529645,531218,532311,533819,535272,536647,537811,539411,540938,542212,543528,545219,546749,547691,549271,550365,551485,553066,554493,555660,557005,558575,559661,561189,562547,563693,565204,566907,568257,569355,571051,572590,574185,575887,577446,579142,580794,582168,583688,584844,586446,587967,589322,590534,591757,593279,594948,596631,598037,599041,600680,602340,603968,605364,606713,607994,609438,611048,612577,614061,615612,617207,618777,620438,622102,623300,624543,625582,627239,628412,629707,630916,632157,633088,634368,635923,637511,639215,640529,641824,643339,644909,646580,648061,649206,650263,651416,652690,654343,655721,656918,658306,659767,661299,662658,664192,665625,667063,668384,669822,671175,672497,673511,674966,675831,676736,677806,679107,680297,681389,682189,683339,684541,685757,686644,688179,689315,690713,691972,693107,694140,695212,696522,697748,698921,699926,700932,702312,704044,705778,707330,708980,710525,712023,712822,714013,715459,716879,718416,719968,721477,722829,724460,725993,727645,729242,730783,732399,733992,735626,737089,738720,740288,741904,743574,745119,746683,748286,749874,751539,753038,754668,756278,757827,759400,760977,762456,764030,765681,767251,768983,770611,771965,773532,775266,776757,778284,779854,781462,782855,784203,785274,786831,788207,789146,790269,791696,792801,794127,795506,797015,798573,799951,801389,802680,804178,805301,806682,808070,809450,810833,812422,813935,815331,816485,817784,819055,820395,821674,823215,824664,826199,827515,828703,829985,831295,832850,834457,835609,837032,838465,839965,841499,842979,844026,845535,847161,848901,850329,851917,853595,855322,856947,858468,860068,861619,863132,864505,866105,867813,869547,870943,872508,873984,875347,877055,878502,879979,881173,882629,883818,885292,886834,888245,889629,891038,892637,894087,895628,897130,898332,899706,900989,902330,903889,905445,907011,908640,909630,910990,912392,913377,914736,916155,917269,918792,920192,921797,923372,924633,926099,926945,927971,928993,930534,931465,932313,933893,934836,936388,937976,939532,941086,942696,944296,945368,946946,948455,950008,951041,952657,954300,955368,956983,958240,959138,960758,961930,962983,964001,965583,966847,968252,969259,970907,972429,974026,975409,976806,978123,979230,980849,982361,983410,984763,986313,987669,989000,990360,991421,993050,994682,995616,996987,998530,999687,1001144,1002366,1003391,1005014,1006482,1007516,1008841,1010363,1011569,1012938,1014250,1015351,1016989,1018591,1019543,1020910,1022445,1023481,1025089,1026629,1027999,1029202,1030808,1032234,1033506,1034891,1036553,1037978,1039071,1040524,1041800,1043189,1044822,1046580,1048111,1049451,1050691,1052256,1053376,1054867,1056243,1057387,1058834,1060489,1061756,1062947,1064622,1066046,1067157,1068494,1069600,1070904,1072585,1073898,1075036,1076325,1077889,1079561,1081025,1082733,1084318,1086016,1087375,1088825,1090020,1091568,1093097,1094585,1095952,1096926,1098402,1100063,1101744,1103262,1104312,1105867,1107506,1109059,1110619,1111971,1113436,1115017,1116587,1118100,1119557,1121088,1122703,1124234,1125891,1127598,1128811,1130151,1131296,1132722,1134082,1135232,1136454,1137756,1138476,1139937,1141476,1143028,1144644,1146120,1147314,1148868,1150322,1151917,1153568,1154770,1155649,1156722,1157538,1158771,1159589,1160437,1161699,1162865,1164458,1165962,1167337,1168406,1169728,1171091,1172313,1173816,1175038,1176274,1177709,1179075,1180498,1181935,1183391,1184886,1186101,1187355,1188660,1190137,1191429,1192884,1194364,1195886,1197301,1198581,1200005,1201504,1202957,1204331,1206379,1208427,1210475,1212532,1213862,1215275,1216705,1218012,1219082,1220509,1221419,1222518,1223372,1224932,1226444,1227553,1228602,1229829,1230867,1231063],"sizes":[1125,1262,1338,1177,1127,1495,1528,1482,1601,1484,1557,1387,1615,1619,1645,1579,1497,1520,1552,1608,1531,1551,1533,1633,1659,1533,1572,1655,1631,1540,1245,1611,1667,1505,1500,1667,1537,1455,1603,1720,1566,1565,1611,1509,1727,1482,1507,1684,1569,1430,1409,1115,1295,1350,1592,1185,1256,1498,1453,1461,1351,1657,1472,1383,1384,1454,1266,1165,1015,1194,1100,1351,1248,1338,1056,1108,1421,1635,1536,1629,1501,1611,1414,785,1136,1207,1463,1488,1450,1487,1477,1536,1533,1512,1472,1628,1399,1467,1466,1600,1357,1440,1291,1705,1546,1258,1574,1566,1485,1430,1260,1376,1407,1335,865,1388,1312,1056,595,1151,1324,1374,1109,1006,1007,1113,1307,907,915,865,1250,1038,917,972,1534,1566,1452,1466,1402,1508,1407,1346,1147,1492,1444,1519,1577,1512,1483,1590,1455,1532,1395,1468,1453,1632,1266,1553,1561,1653,1535,1501,1400,1298,1417,1385,1513,1580,1560,1528,1413,1500,1363,1528,1394,1390,1560,1293,1366,1558,1432,1441,1453,1204,1223,984,1362,914,1337,1259,1031,897,527,795,1093,1014,1148,1275,1350,1226,1391,1131,1256,1231,1089,1190,1332,1297,1362,1359,1399,1607,1580,1564,1493,1310,1119,1074,1265,1305,1046,1355,1254,1138,1055,1064,1306,1270,1035,1471,1537,1373,1354,1475,806,1375,1479,1522,1479,1185,1361,1537,1506,1519,1306,1299,1537,1504,1719,1504,1602,1672,1645,1612,1603,1590,1383,1573,1133,1732,1628,1594,1345,1593,1524,1376,1713,1165,1452,1189,1464,1509,1153,1629,1514,1565,1557,1461,1382,1397,1598,908,1387,1129,1502,1559,1539,1550,1482,1252,1140,1374,1242,1162,1520,1346,1451,1448,1529,1334,1210,1490,1115,1070,1200,1380,1339,1199,1480,1447,1552,1556,1541,1515,1558,1382,1680,1431,1563,1103,1583,1377,1448,1601,1121,1463,1461,1279,1410,1392,1525,1543,848,1035,1370,1628,1687,1719,857,1624,965,1320,1679,1310,1097,1669,1484,897,1614,1063,1237,1653,1376,1062,1571,1508,910,1537,991,1287,1708,1316,1078,1677,1295,859,1597,997,1287,1660,1384,1079,1629,1455,1034,1553,1278,1327,1526,1727,1492,1342,1235,1573,1093,1508,1453,1375,1164,1600,1527,1274,1316,1691,1530,942,1580,1094,1120,1581,1427,1167,1345,1570,1086,1528,1358,1146,1511,1703,1350,1098,1696,1539,1595,1702,1559,1696,1652,1374,1520,1156,1602,1521,1355,1212,1223,1522,1669,1683,1406,1004,1639,1660,1628,1396,1349,1281,1444,1610,1529,1484,1551,1595,1570,1661,1664,1198,1243,1039,1657,1173,1295,1209,1241,931,1280,1555,1588,1704,1314,1295,1515,1570,1671,1481,1145,1057,1153,1274,1653,1378,1197,1388,1461,1532,1359,1534,1433,1438,1321,1438,1353,1322,1014,1455,865,905,1070,1301,1190,1092,800,1150,1202,1216,887,1535,1136,1398,1259,1135,1033,1072,1310,1226,1173,1005,1006,1380,1732,1734,1552,1650,1545,1498,799,1191,1446,1420,1537,1552,1509,1352,1631,1533,1652,1597,1541,1616,1593,1634,1463,1631,1568,1616,1670,1545,1564,1603,1588,1665,1499,1630,1610,1549,1573,1577,1479,1574,1651,1570,1732,1628,1354,1567,1734,1491,1527,1570,1608,1393,1348,1071,1557,1376,939,1123,1427,1105,1326,1379,1509,1558,1378,1438,1291,1498,1123,1381,1388,1380,1383,1589,1513,1396,1154,1299,1271,1340,1279,1541,1449,1535,1316,1188,1282,1310,1555,1607,1152,1423,1433,1500,1534,1480,1047,1509,1626,1740,1428,1588,1678,1727,1625,1521,1600,1551,1513,1373,1600,1708,1734,1396,1565,1476,1363,1708,1447,1477,1194,1456,1189,1474,1542,1411,1384,1409,1599,1450,1541,1502,1202,1374,1283,1341,1559,1556,1566,1629,990,1360,1402,985,1359,1419,1114,1523,1400,1605,1575,1261,1466,846,1026,1022,1541,931,848,1580,943,1552,1588,1556,1554,1610,1600,1072,1578,1509,1553,1033,1616,1643,1068,1615,1257,898,1620,1172,1053,1018,1582,1264,1405,1007,1648,1522,1597,1383,1397,1317,1107,1619,1512,1049,1353,1550,1356,1331,1360,1061,1629,1632,934,1371,1543,1157,1457,1222,1025,1623,1468,1034,1325,1522,1206,1369,1312,1101,1638,1602,952,1367,1535,1036,1608,1540,1370,1203,1606,1426,1272,1385,1662,1425,1093,1453,1276,1389,1633,1758,1531,1340,1240,1565,1120,1491,1376,1144,1447,1655,1267,1191,1675,1424,1111,1337,1106,1304,1681,1313,1138,1289,1564,1672,1464,1708,1585,1698,1359,1450,1195,1548,1529,1488,1367,974,1476,1661,1681,1518,1050,1555,1639,1553,1560,1352,1465,1581,1570,1513,1457,1531,1615,1531,1657,1707,1213,1340,1145,1426,1360,1150,1222,1302,720,1461,1539,1552,1616,1476,1194,1554,1454,1595,1651,1202,879,1073,816,1233,818,848,1262,1166,1593,1504,1375,1069,1322,1363,1222,1503,1222,1236,1435,1366,1423,1437,1456,1495,1215,1254,1305,1477,1292,1455,1480,1522,1415,1280,1424,1499,1453,1374,2048,2048,2048,2057,1330,1413,1430,1307,1070,1427,910,1099,854,1560,1512,1109,1049,1227,1038,196,1127],"successes":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}
;
            compressedData['data'] = byteArray;
            assert(typeof Module['LZ4'] === 'object', 'LZ4 not present - was your app build with  -s LZ4=1  ?');
            Module['LZ4'].loadPackage({ 'metadata': metadata, 'compressedData': compressedData }, true);
            Module['removeRunDependency']('datafile_numcodecs-0.9.1-h672cd09_0.tar.bz2.0.data');
      };
      Module['addRunDependency']('datafile_numcodecs-0.9.1-h672cd09_0.tar.bz2.0.data');

      if (!Module.preloadResults) Module.preloadResults = {};

      Module.preloadResults[PACKAGE_NAME] = {fromCache: false};
      if (fetched) {
        processPackageData(fetched);
        fetched = null;
      } else {
        fetchedCallback = processPackageData;
      }

    }
    if (Module['calledRun']) {
      runWithFS();
    } else {
      if (!Module['preRun']) Module['preRun'] = [];
      Module["preRun"].push(runWithFS); // FS is not initialized yet, wait for it
    }

    }
loadPackage({"files": [{"filename": "/home/runner/env/lib/python3.10/site-packages/numcodecs-0.9.1.dist-info/direct_url.json", "start": 1816363, "end": 1816471}, {"filename": "/home/runner/env/lib/python3.10/site-packages/numcodecs/__init__.py", "start": 442514, "end": 445481}, {"filename": "/home/runner/env/lib/python3.10/site-packages/numcodecs/_shuffle.cpython-310.so", "start": 147048, "end": 243945}, {"filename": "/home/runner/env/lib/python3.10/site-packages/numcodecs/abc.py", "start": 416764, "end": 421305}, {"filename": "/home/runner/env/lib/python3.10/site-packages/numcodecs/astype.py", "start": 414509, "end": 416764}, {"filename": "/home/runner/env/lib/python3.10/site-packages/numcodecs/base64.py", "start": 1009985, "end": 1010769}, {"filename": "/home/runner/env/lib/python3.10/site-packages/numcodecs/blosc.cpython-310.so", "start": 1012389, "end": 1814327}, {"filename": "/home/runner/env/lib/python3.10/site-packages/numcodecs/bz2.py", "start": 145871, "end": 147048}, {"filename": "/home/runner/env/lib/python3.10/site-packages/numcodecs/categorize.py", "start": 142857, "end": 145871}, {"filename": "/home/runner/env/lib/python3.10/site-packages/numcodecs/checksum32.py", "start": 421305, "end": 422225}, {"filename": "/home/runner/env/lib/python3.10/site-packages/numcodecs/compat.py", "start": 405755, "end": 410311}, {"filename": "/home/runner/env/lib/python3.10/site-packages/numcodecs/compat_ext.cpython-310.so", "start": 425057, "end": 442514}, {"filename": "/home/runner/env/lib/python3.10/site-packages/numcodecs/delta.py", "start": 422225, "end": 425057}, {"filename": "/home/runner/env/lib/python3.10/site-packages/numcodecs/fixedscaleoffset.py", "start": 410311, "end": 414509}, {"filename": "/home/runner/env/lib/python3.10/site-packages/numcodecs/gzip.py", "start": 401952, "end": 403479}, {"filename": "/home/runner/env/lib/python3.10/site-packages/numcodecs/json.py", "start": 396215, "end": 399361}, {"filename": "/home/runner/env/lib/python3.10/site-packages/numcodecs/lz4.cpython-310.so", "start": 2134, "end": 140286}, {"filename": "/home/runner/env/lib/python3.10/site-packages/numcodecs/lzma.py", "start": 0, "end": 2134}, {"filename": "/home/runner/env/lib/python3.10/site-packages/numcodecs/msgpacks.py", "start": 140286, "end": 142857}, {"filename": "/home/runner/env/lib/python3.10/site-packages/numcodecs/packbits.py", "start": 1814327, "end": 1816363}, {"filename": "/home/runner/env/lib/python3.10/site-packages/numcodecs/pickles.py", "start": 1008533, "end": 1009843}, {"filename": "/home/runner/env/lib/python3.10/site-packages/numcodecs/quantize.py", "start": 445481, "end": 448547}, {"filename": "/home/runner/env/lib/python3.10/site-packages/numcodecs/registry.py", "start": 404531, "end": 405755}, {"filename": "/home/runner/env/lib/python3.10/site-packages/numcodecs/shuffle.py", "start": 1010769, "end": 1012389}, {"filename": "/home/runner/env/lib/python3.10/site-packages/numcodecs/version.py", "start": 1009843, "end": 1009985}, {"filename": "/home/runner/env/lib/python3.10/site-packages/numcodecs/vlen.cpython-310.so", "start": 243945, "end": 396215}, {"filename": "/home/runner/env/lib/python3.10/site-packages/numcodecs/zfpy.py", "start": 399361, "end": 401952}, {"filename": "/home/runner/env/lib/python3.10/site-packages/numcodecs/zlib.py", "start": 403479, "end": 404531}, {"filename": "/home/runner/env/lib/python3.10/site-packages/numcodecs/zstd.cpython-310.so", "start": 448547, "end": 1008533}]});
  })();
